Este es un archivo de prueba para aprender git

Probando el git status -s

Probando el git diff

Comandos aprendidos hasta ahora -- Cambio para probar github y hacer git pull

git config 
git show <nombre de archivo> #nos muestra el ultimo commit y un diff de la version actual versus la version anterior
Git init <nombre del proyecto o directorio>
Git clone <url>
Git status, Git status -s, Git status --short
Git add ., Git add "nombre del archivo con su extension"
Git diff #nos muestra la deferencia de los cambios que estan en el directorio de trabajo y no se han preparado 
Git diff --cached #nos muestra la deferencia de los cambios que estan preparados versus el ultimo commit
Git commit -m "Comentario de la confirmacion de esta version", Git commit -m -a "el -a #sirve para saltarme el git add, ya que agrega por defecto a todos los archivos modificados"
Git commit -v #nos muestra el diff en los comentarios del commit
git rm #elimina archivos del proyecto y del rastreo, tambiem acepta directorios y argumentos glob
git rm --cached <nombre del archivo> #elimina un archivo del preparado
git mv <nombre del archivo> <nuevo nombre> #renombra archivos

git log #nos muestra el historial de commits con los comentarios
git log -p #nos muestra el historial de commits con los cambios echos

La unificacion de ramas see llama merge

git pull #me hace un git fetch y git merge que es traer y unificar los cambios de un repositorio remoto al local
git pull --allow--unrelated--histories  #hace lo mismo que git pull pero cuando hay conflictos con las historias, lo fuerza a que se unifique


Cambios sobre git hotfix
